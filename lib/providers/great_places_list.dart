import 'package:flutter/cupertino.dart';

import 'dart:collection';
import 'dart:io';

import '../model/place.dart';
import '../database/db_helper.dart';

class GreatPlacesList with ChangeNotifier {
  List<Place> _placesList = [];

//addPlace
  void addNewPlace({
    required String pickedTitle,
    required File pickedImage,
    required PlaceLocation pickedLocation,
  }) async {
    final _newRecord = {
      'title': pickedTitle,
      'imagePath': pickedImage.path,
      'latitude': pickedLocation.latitude,
      'longtitude': pickedLocation.longtitude
    };

    //try to save the place to the SQlLite Database
    final _idGenerated = await DBHelper.insert(
      placeList: _newRecord,
    );

    print('ID generated by DB $_idGenerated');

    final _newPlace = Place(
        id: _idGenerated,
        title: pickedTitle,
        image: pickedImage,
        location: pickedLocation);

    _placesList.add(_newPlace);
    notifyListeners();
  }

  Future<void> fetchAndSetPlaces() async {
    //try to save the place to the SQlLite Database
    final _fetchedList = await DBHelper.select();

    //transform the list to list of places
    print(_fetchedList);
    final List<Place> _transformedList = _fetchedList.map(
      (item) {
        return Place(
          id: item['id'],
          title: item['title'],
          location: PlaceLocation(
            latitude: item['latitude'],
            longtitude: item['longtitude'],
          ),
          image: File(
            item['imagePath'],
          ),
        );
      },
    ).toList();

    _placesList = _transformedList;
    notifyListeners();
  }

//removePlace
  removePlace({required int index}) {
    _placesList.removeAt(index);
    notifyListeners();
  }

//should be atomic
  UnmodifiableListView<Place> get placesList =>
      UnmodifiableListView(_placesList);
}
